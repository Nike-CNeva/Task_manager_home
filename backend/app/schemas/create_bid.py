from typing import List, Optional
from pydantic import BaseModel


# üë§ –ö–ª–∏–µ–Ω—Ç—ã, —Å—Ç–∞—Ç—É—Å—ã, –º–µ–Ω–µ–¥–∂–µ—Ä—ã –∏ —Ç.–ø.
class ReferenceOption(BaseModel):
    value: str
    name: str


# üß© –ü–æ–ª—è –ø—Ä–æ–¥—É–∫—Ç–æ–≤ (input —Ñ–æ—Ä–º—ã)
class ProductField(BaseModel):
    name: str
    label: str
    type: str  # select, number, text, checkbox
    options: Optional[List[ReferenceOption]] = None  # —Ç–æ–ª—å–∫–æ –¥–ª—è select


# üì¶ –ü—Ä–æ–¥—É–∫—Ç—ã —Å –ø–æ–ª—è–º–∏
class ProductReference(BaseModel):
    value: str
    name: str
    fields: List[ProductField]

class MaterialField(BaseModel):
    name: str
    label: str
    type: str
    options: Optional[List[ReferenceOption]] = None


class EmployeeReference(BaseModel):
    id: int
    name: str
    firstname: str

class CustomerReference(BaseModel):
    id: int
    name: str

# üìã –§–∏–Ω–∞–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç
class ReferenceDataResponse(BaseModel):
    customers: List[CustomerReference]
    managers: List[ReferenceOption]
    urgency: List[ReferenceOption]
    products: List[ProductReference]
    materials: List[MaterialField]
    workshops: List[ReferenceOption]
    employees: List[EmployeeReference]
