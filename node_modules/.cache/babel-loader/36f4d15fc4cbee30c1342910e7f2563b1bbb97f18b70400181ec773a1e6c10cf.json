{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { reactive, onMounted } from 'vue';\nimport { useRouter } from 'vue-router';\nexport default {\n  __name: 'ProfilePage',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const router = useRouter();\n    const form = reactive({\n      name: 'Не указано',\n      firstname: '',\n      email: '',\n      telegram: '',\n      username: ''\n    });\n    const isEmptyOrDefault = value => !value.trim() || value.trim().toLowerCase() === 'не указано';\n    const isCyrillic = text => /^[А-ЯЁ][а-яё]+$/.test(text);\n\n    // Загружаем данные с сервера\n    onMounted(async () => {\n      try {\n        const token = localStorage.getItem('auth_token');\n        if (!token) {\n          throw new Error('Токен не найден! Пожалуйста, войдите в систему.');\n        }\n        const response = await fetch('/api/profile', {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        if (!response.ok) throw new Error('Ошибка при загрузке данных. Пожалуйста, попробуйте позже.');\n        const data = await response.json();\n\n        // Заполняем форму данными с сервера\n        form.name = data.name || form.name;\n        form.firstname = data.firstname || form.firstname;\n        form.email = data.email || form.email;\n        form.telegram = data.telegram || form.telegram;\n        form.username = data.username || form.username;\n        form.user_type = data.user_type || form.user_type;\n        form.workshops = data.workshops || form.workshops;\n      } catch (e) {\n        alert(`Ошибка: ${e.message}`);\n      }\n    });\n    const handleSubmit = async () => {\n      let errors = [];\n      if (isEmptyOrDefault(form.name) || !isCyrillic(form.name)) {\n        errors.push('Имя должно содержать только кириллицу, первая буква заглавная.');\n      }\n      if (form.firstname && !isCyrillic(form.firstname)) {\n        errors.push('Фамилия должна содержать только кириллицу, первая буква заглавная.');\n      }\n      if (form.email && !/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(form.email)) {\n        errors.push('Введите корректный email.');\n      }\n      if (form.telegram && !/^@[a-zA-Z0-9_]{5,}$/.test(form.telegram)) {\n        errors.push('Введите корректный Telegram (например, @username).');\n      }\n      if (isEmptyOrDefault(form.username) || form.username.length < 3) {\n        errors.push('Логин должен содержать минимум 3 символа.');\n      }\n      if (errors.length) {\n        alert('Исправьте ошибки:\\n\\n' + errors.join('\\n'));\n        return;\n      }\n\n      // Отправка данных на сервер\n      try {\n        const response = await fetch('/api/profile', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(form)\n        });\n        if (!response.ok) throw new Error('Ошибка при сохранении данных. Пожалуйста, попробуйте позже.');\n        alert('Данные успешно сохранены!');\n        router.push('/');\n      } catch (e) {\n        alert(`Ошибка: ${e.message}`);\n      }\n    };\n    const __returned__ = {\n      router,\n      form,\n      isEmptyOrDefault,\n      isCyrillic,\n      handleSubmit,\n      reactive,\n      onMounted,\n      get useRouter() {\n        return useRouter;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["reactive","onMounted","useRouter","router","form","name","firstname","email","telegram","username","isEmptyOrDefault","value","trim","toLowerCase","isCyrillic","text","test","token","localStorage","getItem","Error","response","fetch","headers","ok","data","json","user_type","workshops","e","alert","message","handleSubmit","errors","push","length","join","method","body","JSON","stringify"],"sources":["C:/Users/nikec/frontend/src/components/ProfilePage.vue"],"sourcesContent":["<template>\r\n  <div class=\"container mt-4\">\r\n    <h3>Ваши данные:</h3>\r\n\r\n    <form @submit.prevent=\"handleSubmit\">\r\n      <ul class=\"list-group mb-4\">\r\n        <li class=\"list-group-item\">\r\n          <strong>Имя:</strong>\r\n          <input v-model=\"form.name\" type=\"text\" class=\"form-control\" required />\r\n        </li>\r\n        <li class=\"list-group-item\">\r\n          <strong>Фамилия:</strong>\r\n          <input v-model=\"form.firstname\" type=\"text\" class=\"form-control\" />\r\n        </li>\r\n        <li class=\"list-group-item\">\r\n          <strong>Почта:</strong>\r\n          <input v-model=\"form.email\" type=\"email\" class=\"form-control\" />\r\n        </li>\r\n        <li class=\"list-group-item\">\r\n          <strong>Телеграм:</strong>\r\n          <input v-model=\"form.telegram\" type=\"text\" class=\"form-control\" />\r\n        </li>\r\n        <li class=\"list-group-item\">\r\n          <strong>Login:</strong>\r\n          <input v-model=\"form.username\" type=\"text\" class=\"form-control\" required />\r\n        </li>\r\n        <li class=\"list-group-item\">\r\n          <strong>Должность:</strong><br />\r\n          {{ form.user_type || 'Не указано' }}\r\n        </li>\r\n        <li class=\"list-group-item\">\r\n          <strong>Цех:</strong><br />\r\n          {{ form.workshops.length ? form.workshops.join(', ') : 'Не указано' }}\r\n        </li>\r\n      </ul>\r\n\r\n      <button type=\"submit\" class=\"btn btn-primary\">Сохранить изменения</button>\r\n    </form>\r\n\r\n    <router-link to=\"/profile/password\" class=\"btn btn-warning mt-3\">Изменить пароль</router-link>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { reactive, onMounted } from 'vue'\r\nimport { useRouter } from 'vue-router'\r\n\r\nconst router = useRouter()\r\n\r\nconst form = reactive({\r\n  name: 'Не указано',\r\n  firstname: '',\r\n  email: '',\r\n  telegram: '',\r\n  username: ''\r\n})\r\n\r\nconst isEmptyOrDefault = (value) => !value.trim() || value.trim().toLowerCase() === 'не указано'\r\n\r\nconst isCyrillic = (text) => /^[А-ЯЁ][а-яё]+$/.test(text)\r\n\r\n// Загружаем данные с сервера\r\nonMounted(async () => {\r\n  try {\r\n    const token = localStorage.getItem('auth_token')\r\n    if (!token) {\r\n      throw new Error('Токен не найден! Пожалуйста, войдите в систему.')\r\n    }\r\n\r\n    const response = await fetch('/api/profile', {\r\n      headers: {\r\n        'Authorization': `Bearer ${token}`,\r\n      },\r\n    })\r\n    if (!response.ok) throw new Error('Ошибка при загрузке данных. Пожалуйста, попробуйте позже.')\r\n\r\n    const data = await response.json()\r\n\r\n    // Заполняем форму данными с сервера\r\n    form.name = data.name || form.name\r\n    form.firstname = data.firstname || form.firstname\r\n    form.email = data.email || form.email\r\n    form.telegram = data.telegram || form.telegram\r\n    form.username = data.username || form.username\r\n    form.user_type = data.user_type || form.user_type\r\n    form.workshops = data.workshops || form.workshops\r\n  } catch (e) {\r\n    alert(`Ошибка: ${e.message}`)\r\n  }\r\n})\r\n\r\nconst handleSubmit = async () => {\r\n  let errors = []\r\n\r\n  if (isEmptyOrDefault(form.name) || !isCyrillic(form.name)) {\r\n    errors.push('Имя должно содержать только кириллицу, первая буква заглавная.')\r\n  }\r\n\r\n  if (form.firstname && !isCyrillic(form.firstname)) {\r\n    errors.push('Фамилия должна содержать только кириллицу, первая буква заглавная.')\r\n  }\r\n\r\n  if (form.email && !/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(form.email)) {\r\n    errors.push('Введите корректный email.')\r\n  }\r\n\r\n  if (form.telegram && !/^@[a-zA-Z0-9_]{5,}$/.test(form.telegram)) {\r\n    errors.push('Введите корректный Telegram (например, @username).')\r\n  }\r\n\r\n  if (isEmptyOrDefault(form.username) || form.username.length < 3) {\r\n    errors.push('Логин должен содержать минимум 3 символа.')\r\n  }\r\n\r\n  if (errors.length) {\r\n    alert('Исправьте ошибки:\\n\\n' + errors.join('\\n'))\r\n    return\r\n  }\r\n\r\n  // Отправка данных на сервер\r\n  try {\r\n    const response = await fetch('/api/profile', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(form),\r\n    })\r\n\r\n    if (!response.ok) throw new Error('Ошибка при сохранении данных. Пожалуйста, попробуйте позже.')\r\n    alert('Данные успешно сохранены!')\r\n    router.push('/')\r\n  } catch (e) {\r\n    alert(`Ошибка: ${e.message}`)\r\n  }\r\n}\r\n</script>\r\n\r\n\r\n<style scoped>\r\n.container {\r\n  max-width: 600px;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}