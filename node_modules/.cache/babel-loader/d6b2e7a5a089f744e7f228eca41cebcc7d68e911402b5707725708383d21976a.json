{"ast":null,"code":"import { createStore } from 'vuex';\nimport axios from 'axios';\nexport default createStore({\n  state: {\n    token: localStorage.getItem('access_token') || '',\n    user: null\n  },\n  mutations: {\n    clearToken(state) {\n      state.token = null; // Удаляем токен\n    },\n    setToken(state, token) {\n      state.token = token;\n      localStorage.setItem('access_token', token);\n    },\n    logout(state) {\n      state.token = '';\n      state.user = null;\n      localStorage.removeItem('access_token');\n    },\n    setUser(state, user) {\n      state.user = user;\n    },\n    clearUser(state) {\n      state.user = null;\n    }\n  },\n  actions: {\n    login({\n      commit\n    }, {\n      token\n    }) {\n      commit('setToken', token);\n    },\n    logout({\n      commit\n    }) {\n      commit('logout');\n    },\n    // Проверка токена при запуске приложения\n    checkToken({\n      commit\n    }) {\n      const token = localStorage.getItem('access_token');\n      if (token) {\n        axios.get('/api/validate_token', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        }).then(response => {\n          if (response.data.valid) {\n            commit('setToken', token); // Подтвердим, что токен активный\n            commit('setUser', response.data.user); // Сохраняем пользователя// Токен валиден, можно загрузить данные пользователя\n          } else {\n            commit('logout'); // Если токен невалиден, выходим\n          }\n        }).catch(() => {\n          commit('logout'); // Ошибка на сервере или при проверке токена\n        });\n      } else {\n        commit('logout'); // Нет токена - выходим\n      }\n    }\n  },\n  getters: {\n    getToken: state => state.token,\n    getUser: state => state.user,\n    isAuthenticated: state => !!state.token\n  }\n});","map":{"version":3,"names":["createStore","axios","state","token","localStorage","getItem","user","mutations","clearToken","setToken","setItem","logout","removeItem","setUser","clearUser","actions","login","commit","checkToken","get","headers","Authorization","then","response","data","valid","catch","getters","getToken","getUser","isAuthenticated"],"sources":["C:/Users/nikec/frontend/src/store.js"],"sourcesContent":["import { createStore } from 'vuex';\r\nimport axios from 'axios';\r\n\r\n\r\nexport default createStore({\r\n  state: {\r\n    token: localStorage.getItem('access_token') || '',\r\n    user: null\r\n  },\r\n  mutations: {\r\n    clearToken(state) {\r\n      state.token = null;  // Удаляем токен\r\n    },\r\n    setToken(state, token) {\r\n      state.token = token;\r\n      localStorage.setItem('access_token', token);\r\n    },\r\n    logout(state) {\r\n      state.token = '';\r\n      state.user = null;\r\n      localStorage.removeItem('access_token');\r\n    },\r\n    setUser(state, user) {\r\n      state.user = user;\r\n    },\r\n    clearUser(state) {\r\n      state.user = null;\r\n    }\r\n  },\r\n  actions: {\r\n    login({ commit }, { token }) {\r\n      commit('setToken', token);\r\n\r\n    },\r\n    logout({ commit }) {\r\n      commit('logout');\r\n    },\r\n    // Проверка токена при запуске приложения\r\n    checkToken({ commit }) {\r\n      const token = localStorage.getItem('access_token');\r\n      if (token) {\r\n        axios\r\n          .get('/api/validate_token', { headers: { Authorization: `Bearer ${token}` } })\r\n          .then((response) => {\r\n            if (response.data.valid) {\r\n              commit('setToken', token);          // Подтвердим, что токен активный\r\n              commit('setUser', response.data.user); // Сохраняем пользователя// Токен валиден, можно загрузить данные пользователя\r\n            } else {\r\n              commit('logout'); // Если токен невалиден, выходим\r\n            }\r\n          })\r\n          .catch(() => {\r\n            commit('logout'); // Ошибка на сервере или при проверке токена\r\n          });\r\n      } else {\r\n        commit('logout'); // Нет токена - выходим\r\n      }\r\n    }\r\n  },\r\n  getters: {\r\n    getToken: (state) => state.token,\r\n    getUser: (state) => state.user,\r\n    isAuthenticated: (state) => !!state.token\r\n  }\r\n});\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,MAAM;AAClC,OAAOC,KAAK,MAAM,OAAO;AAGzB,eAAeD,WAAW,CAAC;EACzBE,KAAK,EAAE;IACLC,KAAK,EAAEC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC,IAAI,EAAE;IACjDC,IAAI,EAAE;EACR,CAAC;EACDC,SAAS,EAAE;IACTC,UAAUA,CAACN,KAAK,EAAE;MAChBA,KAAK,CAACC,KAAK,GAAG,IAAI,CAAC,CAAE;IACvB,CAAC;IACDM,QAAQA,CAACP,KAAK,EAAEC,KAAK,EAAE;MACrBD,KAAK,CAACC,KAAK,GAAGA,KAAK;MACnBC,YAAY,CAACM,OAAO,CAAC,cAAc,EAAEP,KAAK,CAAC;IAC7C,CAAC;IACDQ,MAAMA,CAACT,KAAK,EAAE;MACZA,KAAK,CAACC,KAAK,GAAG,EAAE;MAChBD,KAAK,CAACI,IAAI,GAAG,IAAI;MACjBF,YAAY,CAACQ,UAAU,CAAC,cAAc,CAAC;IACzC,CAAC;IACDC,OAAOA,CAACX,KAAK,EAAEI,IAAI,EAAE;MACnBJ,KAAK,CAACI,IAAI,GAAGA,IAAI;IACnB,CAAC;IACDQ,SAASA,CAACZ,KAAK,EAAE;MACfA,KAAK,CAACI,IAAI,GAAG,IAAI;IACnB;EACF,CAAC;EACDS,OAAO,EAAE;IACPC,KAAKA,CAAC;MAAEC;IAAO,CAAC,EAAE;MAAEd;IAAM,CAAC,EAAE;MAC3Bc,MAAM,CAAC,UAAU,EAAEd,KAAK,CAAC;IAE3B,CAAC;IACDQ,MAAMA,CAAC;MAAEM;IAAO,CAAC,EAAE;MACjBA,MAAM,CAAC,QAAQ,CAAC;IAClB,CAAC;IACD;IACAC,UAAUA,CAAC;MAAED;IAAO,CAAC,EAAE;MACrB,MAAMd,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;MAClD,IAAIF,KAAK,EAAE;QACTF,KAAK,CACFkB,GAAG,CAAC,qBAAqB,EAAE;UAAEC,OAAO,EAAE;YAAEC,aAAa,EAAE,UAAUlB,KAAK;UAAG;QAAE,CAAC,CAAC,CAC7EmB,IAAI,CAAEC,QAAQ,IAAK;UAClB,IAAIA,QAAQ,CAACC,IAAI,CAACC,KAAK,EAAE;YACvBR,MAAM,CAAC,UAAU,EAAEd,KAAK,CAAC,CAAC,CAAU;YACpCc,MAAM,CAAC,SAAS,EAAEM,QAAQ,CAACC,IAAI,CAAClB,IAAI,CAAC,CAAC,CAAC;UACzC,CAAC,MAAM;YACLW,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC;UACpB;QACF,CAAC,CAAC,CACDS,KAAK,CAAC,MAAM;UACXT,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC;QACpB,CAAC,CAAC;MACN,CAAC,MAAM;QACLA,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC;MACpB;IACF;EACF,CAAC;EACDU,OAAO,EAAE;IACPC,QAAQ,EAAG1B,KAAK,IAAKA,KAAK,CAACC,KAAK;IAChC0B,OAAO,EAAG3B,KAAK,IAAKA,KAAK,CAACI,IAAI;IAC9BwB,eAAe,EAAG5B,KAAK,IAAK,CAAC,CAACA,KAAK,CAACC;EACtC;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}