{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nexport default {\n  name: \"UserManagement\",\n  data() {\n    return {\n      users: []\n    };\n  },\n  methods: {\n    async fetchUsers() {\n      try {\n        const response = await fetch(\"/admin/users\");\n        const data = await response.json();\n        this.users = data.users;\n      } catch (error) {\n        console.error(\"Ошибка загрузки пользователей:\", error);\n      }\n    },\n    async confirmDelete(user) {\n      if (confirm(`Удалить пользователя ${user.name}?`)) {\n        try {\n          const response = await fetch(`/a/admin/users/${user.id}/delete`, {\n            method: \"GET\" // можно заменить на DELETE, если на бэке реализовано\n          });\n          if (response.ok) {\n            this.users = this.users.filter(u => u.id !== user.id);\n          } else {\n            const data = await response.json();\n            alert(`Ошибка: ${data.detail}`);\n          }\n        } catch (error) {\n          alert(\"Не удалось удалить пользователя\");\n        }\n      }\n    }\n  },\n  mounted() {\n    this.fetchUsers();\n  }\n};","map":{"version":3,"names":["name","data","users","methods","fetchUsers","response","fetch","json","error","console","confirmDelete","user","confirm","id","method","ok","filter","u","alert","detail","mounted"],"sources":["C:\\Users\\nikec\\frontend\\src\\components\\UserManagement.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <h1 class=\"mb-4\">Управление пользователями</h1>\r\n  \r\n      <a href=\"/admin/users/create\" class=\"btn btn-success mb-3\">Создать нового пользователя</a>\r\n  \r\n      <table class=\"table table-striped\" v-if=\"users.length\">\r\n        <thead>\r\n          <tr>\r\n            <th>ID</th>\r\n            <th>Имя</th>\r\n            <th>Фамилия</th>\r\n            <th>Логин</th>\r\n            <th>Email</th>\r\n            <th>Телеграм</th>\r\n            <th>Роль</th>\r\n            <th>Цех</th>\r\n            <th>Действия</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr v-for=\"user in users\" :key=\"user.id\">\r\n            <td>{{ user.id }}</td>\r\n            <td>{{ user.name }}</td>\r\n            <td>{{ user.firstname }}</td>\r\n            <td>{{ user.username }}</td>\r\n            <td>{{ user.email }}</td>\r\n            <td>{{ user.telegram }}</td>\r\n            <td>{{ user.user_type }}</td>\r\n            <td>\r\n              <span\r\n                class=\"badge bg-primary me-1\"\r\n                v-for=\"workshop in user.workshops\"\r\n                :key=\"workshop\"\r\n              >\r\n                {{ workshop }}\r\n              </span>\r\n            </td>\r\n            <td>\r\n              <a :href=\"`/admin/users/${user.id}/edit`\" class=\"btn btn-primary btn-sm\">Редактировать</a>\r\n              <button @click=\"confirmDelete(user)\" class=\"btn btn-danger btn-sm\">Удалить</button>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n  \r\n      <div v-else class=\"text-muted\">Нет пользователей.</div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    name: \"UserManagement\",\r\n    data() {\r\n      return {\r\n        users: [],\r\n      };\r\n    },\r\n    methods: {\r\n      async fetchUsers() {\r\n        try {\r\n          const response = await fetch(\"/admin/users\");\r\n          const data = await response.json();\r\n          this.users = data.users;\r\n        } catch (error) {\r\n          console.error(\"Ошибка загрузки пользователей:\", error);\r\n        }\r\n      },\r\n      async confirmDelete(user) {\r\n        if (confirm(`Удалить пользователя ${user.name}?`)) {\r\n          try {\r\n            const response = await fetch(`/a/admin/users/${user.id}/delete`, {\r\n              method: \"GET\", // можно заменить на DELETE, если на бэке реализовано\r\n            });\r\n  \r\n            if (response.ok) {\r\n              this.users = this.users.filter(u => u.id !== user.id);\r\n            } else {\r\n              const data = await response.json();\r\n              alert(`Ошибка: ${data.detail}`);\r\n            }\r\n          } catch (error) {\r\n            alert(\"Не удалось удалить пользователя\");\r\n          }\r\n        }\r\n      },\r\n    },\r\n    mounted() {\r\n      this.fetchUsers();\r\n    },\r\n  };\r\n  </script>\r\n  "],"mappings":";;AAmDE,eAAe;EACbA,IAAI,EAAE,gBAAgB;EACtBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE;IACT,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,UAAUA,CAAA,EAAG;MACjB,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMC,KAAK,CAAC,cAAc,CAAC;QAC5C,MAAML,IAAG,GAAI,MAAMI,QAAQ,CAACE,IAAI,CAAC,CAAC;QAClC,IAAI,CAACL,KAAI,GAAID,IAAI,CAACC,KAAK;MACzB,EAAE,OAAOM,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;MACxD;IACF,CAAC;IACD,MAAME,aAAaA,CAACC,IAAI,EAAE;MACxB,IAAIC,OAAO,CAAC,wBAAwBD,IAAI,CAACX,IAAI,GAAG,CAAC,EAAE;QACjD,IAAI;UACF,MAAMK,QAAO,GAAI,MAAMC,KAAK,CAAC,kBAAkBK,IAAI,CAACE,EAAE,SAAS,EAAE;YAC/DC,MAAM,EAAE,KAAK,CAAE;UACjB,CAAC,CAAC;UAEF,IAAIT,QAAQ,CAACU,EAAE,EAAE;YACf,IAAI,CAACb,KAAI,GAAI,IAAI,CAACA,KAAK,CAACc,MAAM,CAACC,CAAA,IAAKA,CAAC,CAACJ,EAAC,KAAMF,IAAI,CAACE,EAAE,CAAC;UACvD,OAAO;YACL,MAAMZ,IAAG,GAAI,MAAMI,QAAQ,CAACE,IAAI,CAAC,CAAC;YAClCW,KAAK,CAAC,WAAWjB,IAAI,CAACkB,MAAM,EAAE,CAAC;UACjC;QACF,EAAE,OAAOX,KAAK,EAAE;UACdU,KAAK,CAAC,iCAAiC,CAAC;QAC1C;MACF;IACF;EACF,CAAC;EACDE,OAAOA,CAAA,EAAG;IACR,IAAI,CAAChB,UAAU,CAAC,CAAC;EACnB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}