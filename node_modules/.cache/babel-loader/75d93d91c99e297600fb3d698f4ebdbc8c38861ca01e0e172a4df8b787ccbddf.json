{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport { mapActions } from 'vuex';\nexport default {\n  data() {\n    return {\n      username: '',\n      password: '',\n      error: '',\n      isLoading: false\n    };\n  },\n  methods: {\n    ...mapActions(['login']),\n    async submitForm() {\n      this.isLoading = true; // Запуск процесса загрузки\n      try {\n        // Отправляем запрос на сервер для аутентификации\n        const response = await axios.post('/api/login', {\n          username: this.username,\n          password: this.password\n        });\n\n        // Если авторизация успешна, сохраняем токен в Vuex\n        if (response.data.access_token) {\n          this.login({\n            token: response.data.access_token\n          });\n\n          // Локальное сохранение токена для последующего использования\n          localStorage.setItem('auth_token', response.data.access_token);\n          this.$router.push('/');\n        } else {\n          this.error = 'Ошибка авторизации: отсутствуют данные пользователя.';\n        }\n      } catch (error) {\n        // Обрабатываем ошибку\n        if (error.response) {\n          // Если есть ответ от сервера\n          this.error = `Ошибка: ${error.response.data.detail || 'Произошла ошибка при попытке войти в систему.'}`;\n        } else {\n          // Если ошибка не связана с сервером\n          this.error = 'Произошла ошибка при попытке войти в систему.';\n        }\n      } finally {\n        this.isLoading = false; // Завершаем процесс загрузки\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","mapActions","data","username","password","error","isLoading","methods","submitForm","response","post","access_token","login","token","localStorage","setItem","$router","push","detail"],"sources":["C:\\Users\\nikec\\frontend\\src\\components\\LoginPage.vue"],"sourcesContent":["<template>\r\n  <div class=\"row justify-content-center mt-5\">\r\n    <div class=\"col-md-6\">\r\n      <div class=\"card\">\r\n        <div class=\"card-header\">\r\n          <h3 class=\"text-center\">Вход в систему</h3>\r\n        </div>\r\n        <div class=\"card-body\">\r\n          <!-- Ошибка -->\r\n          <div v-if=\"error\" class=\"alert alert-danger\">{{ error }}</div>\r\n          \r\n          <!-- Форма входа -->\r\n          <form @submit.prevent=\"submitForm\">\r\n            <div class=\"mb-3\">\r\n              <label for=\"username\" class=\"form-label\">Логин</label>\r\n              <input \r\n                type=\"text\" \r\n                class=\"form-control\" \r\n                id=\"username\" \r\n                v-model=\"username\" \r\n                required\r\n              />\r\n            </div>\r\n            <div class=\"mb-3\">\r\n              <label for=\"password\" class=\"form-label\">Пароль</label>\r\n              <input \r\n                type=\"password\" \r\n                class=\"form-control\" \r\n                id=\"password\" \r\n                v-model=\"password\" \r\n                required\r\n              />\r\n            </div>\r\n            <button type=\"submit\" class=\"btn btn-primary w-100\">Войти</button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport { mapActions } from 'vuex';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      username: '',\r\n      password: '',\r\n      error: '',\r\n      isLoading: false\r\n    };\r\n  },\r\n  methods: {\r\n    ...mapActions(['login']),\r\n    \r\n    async submitForm() {\r\n      this.isLoading = true;  // Запуск процесса загрузки\r\n      try {\r\n        // Отправляем запрос на сервер для аутентификации\r\n        const response = await axios.post('/api/login', {\r\n          username: this.username,\r\n          password: this.password\r\n        });\r\n\r\n        // Если авторизация успешна, сохраняем токен в Vuex\r\n        if (response.data.access_token) {\r\n          this.login({\r\n            token: response.data.access_token,\r\n          });\r\n\r\n          // Локальное сохранение токена для последующего использования\r\n          localStorage.setItem('auth_token', response.data.access_token);\r\n          \r\n          this.$router.push('/');\r\n        } else {\r\n          this.error = 'Ошибка авторизации: отсутствуют данные пользователя.';\r\n        }\r\n      } catch (error) {\r\n        // Обрабатываем ошибку\r\n        if (error.response) {\r\n          // Если есть ответ от сервера\r\n          this.error = `Ошибка: ${error.response.data.detail || 'Произошла ошибка при попытке войти в систему.'}`;\r\n        } else {\r\n          // Если ошибка не связана с сервером\r\n          this.error = 'Произошла ошибка при попытке войти в систему.';\r\n        }\r\n      } finally {\r\n        this.isLoading = false;  // Завершаем процесс загрузки\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Стили для компонента */\r\n</style>\r\n"],"mappings":";AA0CA,OAAOA,KAAI,MAAO,OAAO;AACzB,SAASC,UAAS,QAAS,MAAM;AAEjC,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE,EAAE;MACZC,KAAK,EAAE,EAAE;MACTC,SAAS,EAAE;IACb,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,GAAGN,UAAU,CAAC,CAAC,OAAO,CAAC,CAAC;IAExB,MAAMO,UAAUA,CAAA,EAAG;MACjB,IAAI,CAACF,SAAQ,GAAI,IAAI,EAAG;MACxB,IAAI;QACF;QACA,MAAMG,QAAO,GAAI,MAAMT,KAAK,CAACU,IAAI,CAAC,YAAY,EAAE;UAC9CP,QAAQ,EAAE,IAAI,CAACA,QAAQ;UACvBC,QAAQ,EAAE,IAAI,CAACA;QACjB,CAAC,CAAC;;QAEF;QACA,IAAIK,QAAQ,CAACP,IAAI,CAACS,YAAY,EAAE;UAC9B,IAAI,CAACC,KAAK,CAAC;YACTC,KAAK,EAAEJ,QAAQ,CAACP,IAAI,CAACS;UACvB,CAAC,CAAC;;UAEF;UACAG,YAAY,CAACC,OAAO,CAAC,YAAY,EAAEN,QAAQ,CAACP,IAAI,CAACS,YAAY,CAAC;UAE9D,IAAI,CAACK,OAAO,CAACC,IAAI,CAAC,GAAG,CAAC;QACxB,OAAO;UACL,IAAI,CAACZ,KAAI,GAAI,sDAAsD;QACrE;MACF,EAAE,OAAOA,KAAK,EAAE;QACd;QACA,IAAIA,KAAK,CAACI,QAAQ,EAAE;UAClB;UACA,IAAI,CAACJ,KAAI,GAAI,WAAWA,KAAK,CAACI,QAAQ,CAACP,IAAI,CAACgB,MAAK,IAAK,+CAA+C,EAAE;QACzG,OAAO;UACL;UACA,IAAI,CAACb,KAAI,GAAI,+CAA+C;QAC9D;MACF,UAAU;QACR,IAAI,CAACC,SAAQ,GAAI,KAAK,EAAG;MAC3B;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}