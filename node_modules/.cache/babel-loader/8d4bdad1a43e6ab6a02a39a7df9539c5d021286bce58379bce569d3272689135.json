{"ast":null,"code":"import axios from 'axios';\nimport { mapState } from 'vuex';\nexport default {\n  data() {\n    return {\n      message: '',\n      currentTime: '',\n      userAuthenticated: false,\n      userName: ''\n    };\n  },\n  computed: {\n    ...mapState(['token', 'user']) // Добавляем данные из Vuex\n  },\n  mounted() {\n    this.getData();\n    setInterval(this.updateTime, 1000);\n  },\n  methods: {\n    async getData() {\n      try {\n        const response = await axios.get('/', {\n          headers: {\n            Authorization: `Bearer ${this.token}` // Добавляем токен в заголовок\n          }\n        });\n        this.message = response.data.message;\n        this.currentTime = new Date(response.data.current_datetime).toLocaleString();\n\n        // Проверка состояния аутентификации\n        if (response.data.user_authenticated) {\n          this.userAuthenticated = true;\n          this.userName = response.data.name;\n        } else {\n          this.userAuthenticated = false;\n        }\n      } catch (error) {\n        console.error(\"Ошибка при получении данных:\", error);\n      }\n    },\n    updateTime() {\n      const currentTime = new Date();\n      this.currentTime = currentTime.toLocaleString();\n    }\n  }\n};","map":{"version":3,"names":["axios","mapState","data","message","currentTime","userAuthenticated","userName","computed","mounted","getData","setInterval","updateTime","methods","response","get","headers","Authorization","token","Date","current_datetime","toLocaleString","user_authenticated","name","error","console"],"sources":["C:\\Users\\nikec\\frontend\\src\\components\\HomePage.vue"],"sourcesContent":["<template>\r\n  <div class=\"row justify-content-center\">\r\n    <div class=\"col-md-12\">\r\n      <div class=\"card\">\r\n        <div class=\"card-header\">\r\n          <h3>{{ message }}</h3>\r\n        </div>\r\n        <div class=\"card-body\">\r\n          <p>Текущая дата и время: <span>{{ currentTime }}</span></p>\r\n\r\n          <div v-if=\"userAuthenticated\" id=\"auth-content\">\r\n            <h2>Добро пожаловать, {{ userName }}!</h2>\r\n            <a href=\"/tasks\" class=\"btn btn-success\">Перейти к задачам</a>\r\n          </div>\r\n\r\n          <div v-else id=\"auth-content\">\r\n            <div class=\"alert alert-warning mt-4\">\r\n              <h4 class=\"alert-heading\">Добро пожаловать на главную страницу!</h4>\r\n              <p>Пожалуйста, авторизуйтесь, чтобы начать работать с производственными задачами.</p>\r\n              <a href=\"/login\" class=\"btn btn-primary\">Войти</a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport { mapState } from 'vuex';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      message: '',\r\n      currentTime: '',\r\n      userAuthenticated: false,\r\n      userName: ''\r\n    };\r\n  },\r\n  computed: {\r\n    ...mapState(['token', 'user']),  // Добавляем данные из Vuex\r\n  },\r\n  mounted() {\r\n    this.getData();\r\n    setInterval(this.updateTime, 1000);\r\n  },\r\n  methods: {\r\n    async getData() {\r\n      try {\r\n        const response = await axios.get('/', {\r\n          headers: {\r\n            Authorization: `Bearer ${this.token}`  // Добавляем токен в заголовок\r\n          }\r\n        });\r\n\r\n        this.message = response.data.message;\r\n        this.currentTime = new Date(response.data.current_datetime).toLocaleString();\r\n        \r\n        // Проверка состояния аутентификации\r\n        if (response.data.user_authenticated) {\r\n          this.userAuthenticated = true;\r\n          this.userName = response.data.name;\r\n        } else {\r\n          this.userAuthenticated = false;\r\n        }\r\n\r\n      } catch (error) {\r\n        console.error(\"Ошибка при получении данных:\", error);\r\n      }\r\n    },\r\n    updateTime() {\r\n      const currentTime = new Date();\r\n      this.currentTime = currentTime.toLocaleString();\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Добавьте стили для компонента, если необходимо */\r\n</style>\r\n"],"mappings":"AA6BA,OAAOA,KAAI,MAAO,OAAO;AACzB,SAASC,QAAO,QAAS,MAAM;AAE/B,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,OAAO,EAAE,EAAE;MACXC,WAAW,EAAE,EAAE;MACfC,iBAAiB,EAAE,KAAK;MACxBC,QAAQ,EAAE;IACZ,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACR,GAAGN,QAAQ,CAAC,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC,CAAG;EACnC,CAAC;EACDO,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,OAAO,CAAC,CAAC;IACdC,WAAW,CAAC,IAAI,CAACC,UAAU,EAAE,IAAI,CAAC;EACpC,CAAC;EACDC,OAAO,EAAE;IACP,MAAMH,OAAOA,CAAA,EAAG;MACd,IAAI;QACF,MAAMI,QAAO,GAAI,MAAMb,KAAK,CAACc,GAAG,CAAC,GAAG,EAAE;UACpCC,OAAO,EAAE;YACPC,aAAa,EAAE,UAAU,IAAI,CAACC,KAAK,EAAC,CAAG;UACzC;QACF,CAAC,CAAC;QAEF,IAAI,CAACd,OAAM,GAAIU,QAAQ,CAACX,IAAI,CAACC,OAAO;QACpC,IAAI,CAACC,WAAU,GAAI,IAAIc,IAAI,CAACL,QAAQ,CAACX,IAAI,CAACiB,gBAAgB,CAAC,CAACC,cAAc,CAAC,CAAC;;QAE5E;QACA,IAAIP,QAAQ,CAACX,IAAI,CAACmB,kBAAkB,EAAE;UACpC,IAAI,CAAChB,iBAAgB,GAAI,IAAI;UAC7B,IAAI,CAACC,QAAO,GAAIO,QAAQ,CAACX,IAAI,CAACoB,IAAI;QACpC,OAAO;UACL,IAAI,CAACjB,iBAAgB,GAAI,KAAK;QAChC;MAEF,EAAE,OAAOkB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACtD;IACF,CAAC;IACDZ,UAAUA,CAAA,EAAG;MACX,MAAMP,WAAU,GAAI,IAAIc,IAAI,CAAC,CAAC;MAC9B,IAAI,CAACd,WAAU,GAAIA,WAAW,CAACgB,cAAc,CAAC,CAAC;IACjD;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}