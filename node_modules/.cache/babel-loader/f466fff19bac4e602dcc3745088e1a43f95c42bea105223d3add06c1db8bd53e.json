{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, withModifiers as _withModifiers, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container mt-4\"\n};\nconst _hoisted_2 = {\n  class: \"list-group mb-4\"\n};\nconst _hoisted_3 = {\n  class: \"list-group-item\"\n};\nconst _hoisted_4 = {\n  class: \"list-group-item\"\n};\nconst _hoisted_5 = {\n  class: \"list-group-item\"\n};\nconst _hoisted_6 = {\n  class: \"list-group-item\"\n};\nconst _hoisted_7 = {\n  class: \"list-group-item\"\n};\nconst _hoisted_8 = {\n  class: \"list-group-item\"\n};\nconst _hoisted_9 = {\n  class: \"list-group-item\"\n};\nexport function render(_ctx, _cache) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[17] || (_cache[17] = _createElementVNode(\"h3\", null, \"Ваши данные:\", -1 /* HOISTED */)), _createElementVNode(\"form\", {\n    onSubmit: _cache[5] || (_cache[5] = _withModifiers((...args) => _ctx.handleSubmit && _ctx.handleSubmit(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"ul\", _hoisted_2, [_createElementVNode(\"li\", _hoisted_3, [_cache[6] || (_cache[6] = _createElementVNode(\"strong\", null, \"Имя:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.form.name = $event),\n    type: \"text\",\n    class: \"form-control\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.form.name]])]), _createElementVNode(\"li\", _hoisted_4, [_cache[7] || (_cache[7] = _createElementVNode(\"strong\", null, \"Фамилия:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.form.firstname = $event),\n    type: \"text\",\n    class: \"form-control\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.form.firstname]])]), _createElementVNode(\"li\", _hoisted_5, [_cache[8] || (_cache[8] = _createElementVNode(\"strong\", null, \"Почта:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => _ctx.form.email = $event),\n    type: \"email\",\n    class: \"form-control\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.form.email]])]), _createElementVNode(\"li\", _hoisted_6, [_cache[9] || (_cache[9] = _createElementVNode(\"strong\", null, \"Телеграм:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => _ctx.form.telegram = $event),\n    type: \"text\",\n    class: \"form-control\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.form.telegram]])]), _createElementVNode(\"li\", _hoisted_7, [_cache[10] || (_cache[10] = _createElementVNode(\"strong\", null, \"Login:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => _ctx.form.username = $event),\n    type: \"text\",\n    class: \"form-control\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.form.username]])]), _createElementVNode(\"li\", _hoisted_8, [_cache[11] || (_cache[11] = _createElementVNode(\"strong\", null, \"Должность:\", -1 /* HOISTED */)), _cache[12] || (_cache[12] = _createElementVNode(\"br\", null, null, -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString(_ctx.form.user_type || 'Не указано'), 1 /* TEXT */)]), _createElementVNode(\"li\", _hoisted_9, [_cache[13] || (_cache[13] = _createElementVNode(\"strong\", null, \"Цех:\", -1 /* HOISTED */)), _cache[14] || (_cache[14] = _createElementVNode(\"br\", null, null, -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString(_ctx.form.workshops.length ? _ctx.form.workshops.join(', ') : 'Не указано'), 1 /* TEXT */)])]), _cache[15] || (_cache[15] = _createElementVNode(\"button\", {\n    type: \"submit\",\n    class: \"btn btn-primary\"\n  }, \"Сохранить изменения\", -1 /* HOISTED */))], 32 /* NEED_HYDRATION */), _createVNode(_component_router_link, {\n    to: \"/profile/password\",\n    class: \"btn btn-warning mt-3\"\n  }, {\n    default: _withCtx(() => _cache[16] || (_cache[16] = [_createTextVNode(\"Изменить пароль\")])),\n    _: 1 /* STABLE */\n  })]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","onSubmit","_cache","_withModifiers","args","_ctx","handleSubmit","_hoisted_2","_hoisted_3","$event","form","name","type","required","_hoisted_4","firstname","_hoisted_5","email","_hoisted_6","telegram","_hoisted_7","username","_hoisted_8","_createTextVNode","_toDisplayString","user_type","_hoisted_9","workshops","length","join","_createVNode","_component_router_link","to","default","_withCtx","_"],"sources":["C:\\Users\\nikec\\frontend\\src\\components\\ProfilePage.vue"],"sourcesContent":["<template>\r\n  <div class=\"container mt-4\">\r\n    <h3>Ваши данные:</h3>\r\n\r\n    <form @submit.prevent=\"handleSubmit\">\r\n      <ul class=\"list-group mb-4\">\r\n        <li class=\"list-group-item\">\r\n          <strong>Имя:</strong>\r\n          <input v-model=\"form.name\" type=\"text\" class=\"form-control\" required />\r\n        </li>\r\n        <li class=\"list-group-item\">\r\n          <strong>Фамилия:</strong>\r\n          <input v-model=\"form.firstname\" type=\"text\" class=\"form-control\" />\r\n        </li>\r\n        <li class=\"list-group-item\">\r\n          <strong>Почта:</strong>\r\n          <input v-model=\"form.email\" type=\"email\" class=\"form-control\" />\r\n        </li>\r\n        <li class=\"list-group-item\">\r\n          <strong>Телеграм:</strong>\r\n          <input v-model=\"form.telegram\" type=\"text\" class=\"form-control\" />\r\n        </li>\r\n        <li class=\"list-group-item\">\r\n          <strong>Login:</strong>\r\n          <input v-model=\"form.username\" type=\"text\" class=\"form-control\" required />\r\n        </li>\r\n        <li class=\"list-group-item\">\r\n          <strong>Должность:</strong><br />\r\n          {{ form.user_type || 'Не указано' }}\r\n        </li>\r\n        <li class=\"list-group-item\">\r\n          <strong>Цех:</strong><br />\r\n          {{ form.workshops.length ? form.workshops.join(', ') : 'Не указано' }}\r\n        </li>\r\n      </ul>\r\n\r\n      <button type=\"submit\" class=\"btn btn-primary\">Сохранить изменения</button>\r\n    </form>\r\n\r\n    <router-link to=\"/profile/password\" class=\"btn btn-warning mt-3\">Изменить пароль</router-link>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { reactive, onMounted } from 'vue'\r\nimport { useRouter } from 'vue-router'\r\n\r\nconst router = useRouter()\r\n\r\nconst form = reactive({\r\n  name: 'Не указано',\r\n  firstname: '',\r\n  email: '',\r\n  telegram: '',\r\n  username: '',\r\n  user_type: '',\r\n  workshops: [], // список цехов\r\n})\r\n\r\nconst isEmptyOrDefault = (value) => !value.trim() || value.trim().toLowerCase() === 'не указано'\r\n\r\nconst isCyrillic = (text) => /^[А-ЯЁ][а-яё]+$/.test(text)\r\n\r\n// Загружаем данные с сервера\r\nonMounted(async () => {\r\n  try     \r\n    const token = localStorage.getItem('auth_token') // или из cookies, если используется\r\n    const response = await fetch('/api/profile', {\r\n      headers: {\r\n        'Authorization': `Bearer ${token}`,\r\n      },\r\n    })\r\n    if (!response.ok) throw new Error('Ошибка при загрузке данных.')\r\n    \r\n    const data = await response.json()\r\n\r\n    // Заполняем форму данными с сервера\r\n    form.name = data.name || form.name\r\n    form.firstname = data.firstname || form.firstname\r\n    form.email = data.email || form.email\r\n    form.telegram = data.telegram || form.telegram\r\n    form.username = data.username || form.username\r\n    form.user_type = data.user_type || form.user_type\r\n    form.workshops = data.workshops || form.workshops\r\n  } catch (e) {\r\n    alert(e.message)\r\n  }\r\n})\r\n\r\nconst handleSubmit = async () => {\r\n  let errors = []\r\n\r\n  if (isEmptyOrDefault(form.name) || !isCyrillic(form.name)) {\r\n    errors.push('Имя должно содержать только кириллицу, первая буква заглавная.')\r\n  }\r\n\r\n  if (form.firstname && !isCyrillic(form.firstname)) {\r\n    errors.push('Фамилия должна содержать только кириллицу, первая буква заглавная.')\r\n  }\r\n\r\n  if (form.email && !/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(form.email)) {\r\n    errors.push('Введите корректный email.')\r\n  }\r\n\r\n  if (form.telegram && !/^@[a-zA-Z0-9_]{5,}$/.test(form.telegram)) {\r\n    errors.push('Введите корректный Telegram (например, @username).')\r\n  }\r\n\r\n  if (isEmptyOrDefault(form.username) || form.username.length < 3) {\r\n    errors.push('Логин должен содержать минимум 3 символа.')\r\n  }\r\n\r\n  if (errors.length) {\r\n    alert('Исправьте ошибки:\\n\\n' + errors.join('\\n'))\r\n    return\r\n  }\r\n\r\n  // Отправка данных на сервер\r\n  try {\r\n    const response = await fetch('/api/profile', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(form),\r\n    })\r\n\r\n    if (!response.ok) throw new Error('Ошибка при сохранении данных.')\r\n    alert('Данные успешно сохранены!')\r\n    router.push('/')\r\n  } catch (e) {\r\n    alert(e.message)\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.container {\r\n  max-width: 600px;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}